/// The natural language grid system (using class names like "columns" and "row").  This is enabled or disabled with the `$enableGrid` variable in `variables/_options.scss`.
/// @group grid
@mixin grid {
	.row {
		@extend %clearfix;
		margin-left: 0;
		margin-right: 0;
		min-width: 0;
		padding: $columnPadding;
		width: 100%;

		@include media($columnBreakpoint) {
			margin: 0 auto;
			max-width: $rowMaxWidth;
			width: 100%;
		}

		& + .row {
			padding-top: 0;
		}

		.row {
			margin-top: $columnPadding;
			padding: 0;

			@include media($columnBreakpoint) {
				min-width: 0px;
			}

			&:first-child {
				margin-top: 0;
			}

			.column,
			.columns {
				padding: 0;
			}
		}

		.centered {
			margin: 0;
		}

		.column,
		.columns {
			@extend %clearfix;
			margin-top: $columnPadding;
			padding: $columnPadding;

			@include media($columnBreakpoint) {
				@extend %column-config;
				margin-left: $gutterWidth;
			}

			&:first-child {
				@include media($columnBreakpoint) {
					margin-left: 0;
				}
			}
		}

		// Generate Column Classes
		@for $i from 1 through $columns{
			@if $i == 1 and (index($enabledColumns, $i) or length($enabledColumns) == 0 ) {
				.one.column {
					@include media($columnBreakpoint) {
						width: columns($i);
					}
				}
				.one.columns {
					// Fix for Sass bug
					// @extend .one.column
					@include media($columnBreakpoint) {
						width: columns($i);
					}
				}
			}
			@else if (index($enabledColumns, $i) or length($enabledColumns) == 0 ) {
				.#{number-as-word($i)}.columns {
					@include media($columnBreakpoint) {
						width: columns($i);
					}
				}
			}
		}

		// Generate Position Classes
		@for $i from 1 through $columns {
			@if ($enablePosition) and (index($enabledPositions, $i) or length($enabledPositions) == 0 ) {
				.position-#{number-as-word($i)} {
					@include media($columnBreakpoint) {
						margin-left: columnPosition($i) !important;	// override :first-child rule
						margin-right: -100%;
					}
				}
			}
		}

		// Generate Centered Classes
		@if ($enableCentered) {
			@for $i from 1 through $columns - 1 {
				.#{number-as-word($i)}.centered {
					@include media($columnBreakpoint) {
						margin-left: centered($i);
					}
				}
			}
		}
	}
}