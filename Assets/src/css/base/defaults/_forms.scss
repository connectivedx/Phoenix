form {
	margin: 0;
}

fieldset {
	border: none;
	margin: em(12) 0 0;
	padding: 0;

	&:first-child,
	&.flush {
		margin-top: 0;
	}

	legend {
		display: none;
	}

	ol {
		list-style-type: none;
		margin: 0;
		padding: 0;
	}

	li {
		margin-top: em(12);

		&:first-child {
			margin-top: 0;
		}
	}

	label,
	label + select {
		display: block;
	}

	label {
		&.inline {
			display: inline-block;
			padding-right: 5px;
		}
	}

	input[type="text"],
	input[type="number"],
	input[type="password"],
	input[type="email"],
	input[type="tel"] {
		// height is set explicitly in pixels to match the custom selects
		height: $inputHeight;
	}

	input[type="text"],
	input[type="number"],
	input[type="password"],
	input[type="email"],
	input[type="tel"],
	textarea {
		background-color: color(greyLight);
		border: 1px solid color(greyMedium);
		border-radius: $formElementBorderRadius;
		max-width: 100%;
		padding: em(8);
		@include placeholder-color(color(greyDark));
		width: 100%;
	}

	textarea {
		resize: vertical;
	}

	input[type="radio"],
	input[type="checkbox"] {
		float: left;
		height: 1px;
		margin: 0;
		opacity: 0;
		padding: 0;
		width: 1px;

		& + label {
			clear: none;
			display: block;
			padding: em(6) em(5) em(4) em(27);

			&::before {
				display: inline-block;
				margin-left: em(-26);
				margin-right: em(8);
				vertical-align: middle;
			}

			&.inline {
				display: inline-block;
			}
		}
	}

	input[type="radio"] {
		& + label {
			&::before {
				content: image('radio-unchecked.svg');
			}
		}
		&:focus + label {
			color: color(primary);
		}
		&:checked + label {
			&::before {
				content: image('radio-checked.svg');
			}
		}
	}

	input[type="checkbox"] {
		& + label {
			&::before {
				content: image('checkbox-unchecked.svg');
			}
		}
		&:focus + label {
			color: color(primary);
		}
		&:checked + label {
			&::before {
				content: image('checkbox-checked.svg');
			}
		}
	}

	& + button {
		margin-top: em(12);
	}

	.radio-list,
	.checkbox-list {
		> li {
			margin: 0 0 0 em(12);
		}
	}
}

$decoratorSelectBorderSize: 1px;
$decoratorSelectHeight: $inputHeight - (2 * $decoratorSelectBorderSize);

%decorator-select {
	@include gradient(color(greyLight), color(greyMedium));
	border: $decoratorSelectBorderSize solid color(greyMedium);
	border-radius: $formElementBorderRadius;
	display: inline-block;
	width: 100%;

	select {
		-webkit-appearance: none;
		background: transparent;
		border: none;
		color: black;
		display: block;
		outline: none;
		padding: 6px 10px 6px 10px;
		position: relative;
		width: 100%;
	}
}

.decorator-select {
	@extend %decorator-select;
	position: relative;

	&::after {
		content: image('bg-select-arrow.png');
		height: $decoratorSelectHeight;	// the content image's height should fit within the confines of the input's height
		pointer-events: none;
		position: absolute;
		right: 0;
		top: 0;
	}

	select {
		height: $decoratorSelectHeight;
	}
}

.decorator-select-multiple {
	@extend %decorator-select;

	select {
		min-height: $decoratorSelectHeight;
	}
}

.custom-file-upload {
	.no-js & {
		display: none;
	}
}

input[type="file"] {
	.js & {
		visibility: hidden;
		width: 0px;
	}
}